# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  
  config.vm.provider :virtualbox do |vb|
   vb.memory = "4096" # Aloca 4 GB de mem√≥ria para a VM 
   vb.cpus = 2     # Aloca 2 CPUs para a VM
  end

  config.vbguest.auto_update = false
  config.vm.boot_timeout = 600  # Set to 10 minutes or adjust as needed

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 8080, host: 8080
  # config.vm.network "forwarded_port", guest: 59001, host: 59001
  
  config.vm.box = "bento/ubuntu-22.04"

  # Copy public SSH key to VM
  config.vm.provision "file", source: "~/.ssh/vagrantCA3Key.pub", destination: "~/.ssh/authorized_keys"

  config.ssh.forward_agent = true
  config.ssh.insert_key = false

  # Paths to the private key
  config.ssh.private_key_path = [
    "~/.vagrant.d/insecure_private_key",
    "~/.ssh/vagrantCA3Key"
  ]
  
  #Copy all the available SSH keys locally into the Virtual Machine
  config.vm.provision "file", source: "~/.ssh/id_ed25519", destination: "/home/vagrant/.ssh/id_ed25519"
  config.vm.synced_folder "./shared/", "/shared"

  config.vm.hostname = "cogsiVagrant"
 
  config.vm.define "host1" do |tutRest|
    tutRest.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh_host1"
    tutRest.vm.network "private_network", ip: "192.168.33.10"
    tutRest.vm.network "forwarded_port", guest: 8080, host: 8080
    
    # Copy SSH private key to the vagrant user's .ssh directory
    tutRest.vm.provision "file", source: "~/.ssh/vagrantCA3Key", destination: "/home/vagrant/.ssh/vagrantCA3Key"

     
    # Provisioning para o projeto tutRest (com o ansible)
    tutRest.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "./provision_restservice.yml"
      ansible.inventory_path = "inventory.ini"
    end
  end

  config.vm.define "host2" do |tutRestDB|
    tutRestDB.vm.network "forwarded_port", guest: 22, host: 2224, id: "ssh_host2"
    tutRestDB.vm.network "private_network", ip: "192.168.33.11"
    tutRestDB.vm.network "forwarded_port", guest: 9092, host: 9092

    tutRestDB.vm.provision "file", source: "~/.ssh/vagrantCA3Key", destination: "/home/vagrant/.ssh/vagrantCA3Key"

    # Provisioning para a base de dados do projeto tutRest (com o ansible)
    tutRestDB.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "./provision_h2database.yml"
      ansible.inventory_path = "inventory.ini"
    end

  end

end
